{"ast":null,"code":"var _jsxFileName = \"/home/jerv/code_projects/data_playground/webapp/src/hooks/useAuth.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect, useCallback, createContext, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { authAPI } from '../services/api';\n\n// Initial auth state\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  isLoading: false,\n  error: null\n};\n\n// Create context\nexport const AuthContext = /*#__PURE__*/createContext({\n  authState: initialState,\n  login: async () => {},\n  register: async () => {},\n  logout: () => {},\n  updateProfile: async () => {}\n});\n\n// Auth provider component\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [authState, setAuthState] = useState(initialState);\n  const navigate = useNavigate();\n\n  // Load user on mount if token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      if (authState.token) {\n        try {\n          setAuthState(prev => ({\n            ...prev,\n            isLoading: true\n          }));\n          const {\n            user\n          } = await authAPI.getProfile();\n          setAuthState({\n            user,\n            token: authState.token,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null\n          });\n        } catch (error) {\n          // Token is invalid or expired\n          localStorage.removeItem('token');\n          setAuthState({\n            user: null,\n            token: null,\n            isAuthenticated: false,\n            isLoading: false,\n            error: 'Session expired. Please login again.'\n          });\n          navigate('/login');\n        }\n      }\n    };\n    loadUser();\n  }, [authState.token, navigate]);\n\n  // Register user\n  const register = async credentials => {\n    try {\n      setAuthState(prev => ({\n        ...prev,\n        isLoading: true\n      }));\n      await authAPI.register(credentials);\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: null\n      });\n      toast.success('Registration successful! Please login.');\n      navigate('/login');\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Registration failed';\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: errorMessage\n      });\n      toast.error(errorMessage);\n    }\n  };\n\n  // Login user\n  const login = async credentials => {\n    try {\n      setAuthState(prev => ({\n        ...prev,\n        isLoading: true\n      }));\n      const {\n        token,\n        user\n      } = await authAPI.login(credentials);\n\n      // Save token to localStorage\n      localStorage.setItem('token', token);\n      setAuthState({\n        user,\n        token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null\n      });\n      toast.success('Login successful!');\n      navigate('/playground');\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Login failed';\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: errorMessage\n      });\n      toast.error(errorMessage);\n    }\n  };\n\n  // Logout user\n  const logout = useCallback(() => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Reset auth state\n    setAuthState({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      isLoading: false,\n      error: null\n    });\n    toast.success('Logged out successfully');\n    navigate('/login');\n  }, [navigate]);\n\n  // Update profile\n  const updateProfile = async data => {\n    try {\n      setAuthState(prev => ({\n        ...prev,\n        isLoading: true\n      }));\n      const {\n        user\n      } = await authAPI.updateProfile(data);\n      setAuthState({\n        ...authState,\n        user,\n        isLoading: false,\n        error: null\n      });\n      toast.success('Profile updated successfully');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const errorMessage = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Profile update failed';\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: errorMessage\n      });\n      toast.error(errorMessage);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authState,\n      login,\n      register,\n      logout,\n      updateProfile\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 5\n  }, this);\n};\n\n// Custom hook to use auth context\n_s(AuthProvider, \"0S8hX+fZgnJHFouSqAf0EMTHIvw=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","createContext","useContext","useNavigate","toast","authAPI","jsxDEV","_jsxDEV","initialState","user","token","localStorage","getItem","isAuthenticated","isLoading","error","AuthContext","authState","login","register","logout","updateProfile","AuthProvider","children","_s","setAuthState","navigate","loadUser","prev","getProfile","removeItem","credentials","success","_error$response","_error$response$data","errorMessage","response","data","message","setItem","_error$response2","_error$response2$data","_error$response3","_error$response3$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["/home/jerv/code_projects/data_playground/webapp/src/hooks/useAuth.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback, createContext, useContext } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { toast } from 'react-hot-toast';\nimport { \n  User, \n  AuthState, \n  LoginCredentials, \n  RegisterCredentials, \n  ProfileUpdateData \n} from '../types/user';\nimport { authAPI } from '../services/api';\n\n// Initial auth state\nconst initialState: AuthState = {\n  user: null,\n  token: localStorage.getItem('token'),\n  isAuthenticated: !!localStorage.getItem('token'),\n  isLoading: false,\n  error: null,\n};\n\n// Create context\nexport const AuthContext = createContext<{\n  authState: AuthState;\n  login: (credentials: LoginCredentials) => Promise<void>;\n  register: (credentials: RegisterCredentials) => Promise<void>;\n  logout: () => void;\n  updateProfile: (data: ProfileUpdateData) => Promise<void>;\n}>({\n  authState: initialState,\n  login: async () => {},\n  register: async () => {},\n  logout: () => {},\n  updateProfile: async () => {},\n});\n\n// Auth provider component\nexport const AuthProvider = ({ children }: { children: React.ReactNode }) => {\n  const [authState, setAuthState] = useState<AuthState>(initialState);\n  const navigate = useNavigate();\n\n  // Load user on mount if token exists\n  useEffect(() => {\n    const loadUser = async () => {\n      if (authState.token) {\n        try {\n          setAuthState(prev => ({ ...prev, isLoading: true }));\n          const { user } = await authAPI.getProfile();\n          setAuthState({\n            user,\n            token: authState.token,\n            isAuthenticated: true,\n            isLoading: false,\n            error: null,\n          });\n        } catch (error) {\n          // Token is invalid or expired\n          localStorage.removeItem('token');\n          setAuthState({\n            user: null,\n            token: null,\n            isAuthenticated: false,\n            isLoading: false,\n            error: 'Session expired. Please login again.',\n          });\n          navigate('/login');\n        }\n      }\n    };\n\n    loadUser();\n  }, [authState.token, navigate]);\n\n  // Register user\n  const register = async (credentials: RegisterCredentials) => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }));\n      await authAPI.register(credentials);\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: null,\n      });\n      toast.success('Registration successful! Please login.');\n      navigate('/login');\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.message || 'Registration failed';\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: errorMessage,\n      });\n      toast.error(errorMessage);\n    }\n  };\n\n  // Login user\n  const login = async (credentials: LoginCredentials) => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }));\n      const { token, user } = await authAPI.login(credentials);\n      \n      // Save token to localStorage\n      localStorage.setItem('token', token);\n      \n      setAuthState({\n        user,\n        token,\n        isAuthenticated: true,\n        isLoading: false,\n        error: null,\n      });\n      \n      toast.success('Login successful!');\n      navigate('/playground');\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.message || 'Login failed';\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: errorMessage,\n      });\n      toast.error(errorMessage);\n    }\n  };\n\n  // Logout user\n  const logout = useCallback(() => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n    \n    // Reset auth state\n    setAuthState({\n      user: null,\n      token: null,\n      isAuthenticated: false,\n      isLoading: false,\n      error: null,\n    });\n    \n    toast.success('Logged out successfully');\n    navigate('/login');\n  }, [navigate]);\n\n  // Update profile\n  const updateProfile = async (data: ProfileUpdateData) => {\n    try {\n      setAuthState(prev => ({ ...prev, isLoading: true }));\n      const { user } = await authAPI.updateProfile(data);\n      \n      setAuthState({\n        ...authState,\n        user,\n        isLoading: false,\n        error: null,\n      });\n      \n      toast.success('Profile updated successfully');\n    } catch (error: any) {\n      const errorMessage = error.response?.data?.message || 'Profile update failed';\n      setAuthState({\n        ...authState,\n        isLoading: false,\n        error: errorMessage,\n      });\n      toast.error(errorMessage);\n    }\n  };\n\n  return (\n    <AuthContext.Provider value={{ authState, login, register, logout, updateProfile }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\n// Custom hook to use auth context\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  \n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  \n  return context;\n}; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}